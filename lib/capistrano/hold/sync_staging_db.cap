namespace :db do
	desc "Sync the staging database and file uploads from production"
	task :sync, :roles => :web	do
		if stage != :staging then
			puts "[ERROR] You must run db:sync from staging with cap staging db:sync"
		else
			puts "Hang on... this might take a while."
			random = rand( 10 ** 5 ).to_s.rjust( 5, '0' )
			p = wpdb[ :production ]
			s = wpdb[ :staging ]
			puts "db:sync"
			puts stage
			system "mysqldump -u #{p[:user]} --result-file=/tmp/wpstack-#{random}.sql -h #{p[:host]} -p#{p[:password]} #{p[:name]}"
			system "mysql -u #{s[:user]} -h #{s[:host]} -p#{s[:password]} #{s[:name]} < /tmp/wpstack-#{random}.sql && rm /tmp/wpstack-#{random}.sql"
			puts "Database synced to staging"
			# memcached.restart
			puts "Memcached flushed"
			# Now to copy files
			find_servers( :roles => :web ).each do |server|
				system "rsync -avz --delete #{production_deploy_to}/shared/files/ #{server}:#{shared_path}/files/"
			end
		end
	end
end
